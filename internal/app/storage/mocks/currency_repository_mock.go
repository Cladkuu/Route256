// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	pgx "github.com/jackc/pgx/v4"
	mock "github.com/stretchr/testify/mock"
)

// CurrencyRepositoryMock is an autogenerated mock type for the CurrencyRepositoryMock type
type CurrencyRepositoryMock struct {
	mock.Mock
}

// GetCurrency provides a mock function with given fields: ctx, transaction, currency
func (_m *CurrencyRepositoryMock) GetCurrency(ctx context.Context, transaction pgx.Tx, currency string) error {
	ret := _m.Called(ctx, transaction, currency)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, pgx.Tx, string) error); ok {
		r0 = rf(ctx, transaction, currency)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCurrencyRepositoryMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewCurrencyRepositoryMock creates a new instance of CurrencyRepositoryMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCurrencyRepositoryMock(t mockConstructorTestingTNewCurrencyRepositoryMock) *CurrencyRepositoryMock {
	mock := &CurrencyRepositoryMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
